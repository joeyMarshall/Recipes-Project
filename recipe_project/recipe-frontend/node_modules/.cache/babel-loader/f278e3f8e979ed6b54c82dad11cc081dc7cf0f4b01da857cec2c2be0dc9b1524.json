{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Recipes Project/recipe_project/recipe-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [newRecipe, setNewRecipe] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/recipes/\").then(response => response.json()).then(data => setRecipes(data)).catch(error => {\n      console.error(\"Error fetching recipes:\", error);\n      setError(\"Failed to fetch recipes.\");\n    });\n  }, []);\n  const handleAddRecipe = () => {\n    fetch(\"http://localhost:8000/api/recipes/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: newRecipe\n      })\n    }).then(response => response.json()).then(data => {\n      setRecipes([...recipes, data]);\n      setNewRecipe(\"\");\n    }).catch(error => {\n      console.error(\"Error adding recipe:\", error);\n      setError(\"Failed to add recipe.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipe List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recipes.length > 0 ? recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: recipe.name\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 37\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No recipes found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newRecipe,\n        onChange: e => setNewRecipe(e.target.value),\n        placeholder: \"Add a new recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRecipe,\n        children: \"Add Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g+JV3rpg7O+M0ru6Ocx1QFj7UGo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","recipes","setRecipes","newRecipe","setNewRecipe","error","setError","fetch","then","response","json","data","catch","console","handleAddRecipe","method","headers","body","JSON","stringify","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","recipe","id","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/joey/Recipes Project/recipe_project/recipe-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [recipes, setRecipes] = useState([]);\n  const [newRecipe, setNewRecipe] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/recipes/\")\n      .then((response) => response.json())\n      .then((data) => setRecipes(data))\n      .catch((error) => {\n        console.error(\"Error fetching recipes:\", error);\n        setError(\"Failed to fetch recipes.\");\n      });\n  }, []);\n\n  const handleAddRecipe = () => {\n    fetch(\"http://localhost:8000/api/recipes/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ name: newRecipe }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setRecipes([...recipes, data]);\n        setNewRecipe(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error adding recipe:\", error);\n        setError(\"Failed to add recipe.\");\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Recipe List</h1>\n        {error && <p className=\"error\">{error}</p>}\n        <ul>\n          {recipes.length > 0 ? (\n            recipes.map((recipe) => <li key={recipe.id}>{recipe.name}</li>)\n          ) : (\n            <li>No recipes found.</li>\n          )}\n        </ul>\n        <input\n          type=\"text\"\n          value={newRecipe}\n          onChange={(e) => setNewRecipe(e.target.value)}\n          placeholder=\"Add a new recipe\"\n        />\n        <button onClick={handleAddRecipe}>Add Recipe</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}